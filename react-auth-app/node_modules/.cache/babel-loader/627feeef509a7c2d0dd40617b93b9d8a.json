{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Laptop\\\\PycharmProjects\\\\useful\\\\node-react\\\\react-node-express-mysql\\\\react-auth-app\\\\src\\\\components\\\\login.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { Paper, Box, Grid, TextField, Typography, FormControlLabel, Checkbox, Button } from '@material-ui/core';\nimport AuthService from \"../services/auth.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  var _errors$fullname, _errors$username, _errors$email, _errors$password, _errors$confirmPasswo;\n\n  const validationSchema = Yup.object().shape({\n    fullname: Yup.string().required('Fullname is required'),\n    username: Yup.string().required('Username is required').min(6, 'Username must be at least 6 characters').max(20, 'Username must not exceed 20 characters'),\n    email: Yup.string().required('Email is required').email('Email is invalid'),\n    password: Yup.string().required('Password is required').min(6, 'Password must be at least 6 characters').max(40, 'Password must not exceed 40 characters'),\n    confirmPassword: Yup.string().required('Confirm Password is required').oneOf([Yup.ref('password'), null], 'Confirm Password does not match'),\n    acceptTerms: Yup.bool().oneOf([true], 'Accept Terms is required')\n  });\n  const {\n    register,\n    control,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n\n  const onSubmit = data => {\n    console.log(JSON.stringify(data, null, 2));\n    AuthService.login(data.fullname, data.password).then(() => {\n      window.location.reload();\n    }, error => {\n      const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        mt: 5,\n        px: 3,\n        py: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 1,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 12,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              id: \"fullname\",\n              name: \"fullname\",\n              label: \"Full Name\",\n              fullWidth: true,\n              margin: \"dense\",\n              ...register('fullname'),\n              error: errors.fullname ? true : false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"inherit\",\n              color: \"textSecondary\",\n              children: (_errors$fullname = errors.fullname) === null || _errors$fullname === void 0 ? void 0 : _errors$fullname.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              id: \"username\",\n              name: \"username\",\n              label: \"Username\",\n              fullWidth: true,\n              margin: \"dense\",\n              ...register('username'),\n              error: errors.username ? true : false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"inherit\",\n              color: \"textSecondary\",\n              children: (_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              id: \"email\",\n              name: \"email\",\n              label: \"Email\",\n              fullWidth: true,\n              margin: \"dense\",\n              ...register('email'),\n              error: errors.email ? true : false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"inherit\",\n              color: \"textSecondary\",\n              children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              id: \"password\",\n              name: \"password\",\n              label: \"Password\",\n              type: \"password\",\n              fullWidth: true,\n              margin: \"dense\",\n              ...register('password'),\n              error: errors.password ? true : false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"inherit\",\n              color: \"textSecondary\",\n              children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              id: \"confirmPassword\",\n              name: \"confirmPassword\",\n              label: \"Confirm Password\",\n              type: \"password\",\n              fullWidth: true,\n              margin: \"dense\",\n              ...register('confirmPassword'),\n              error: errors.confirmPassword ? true : false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"inherit\",\n              color: \"textSecondary\",\n              children: (_errors$confirmPasswo = errors.confirmPassword) === null || _errors$confirmPasswo === void 0 ? void 0 : _errors$confirmPasswo.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Controller, {\n                control: control,\n                name: \"acceptTerms\",\n                defaultValue: \"false\",\n                inputRef: register(),\n                render: ({\n                  field: {\n                    onChange\n                  }\n                }) => /*#__PURE__*/_jsxDEV(Checkbox, {\n                  color: \"primary\",\n                  onChange: e => onChange(e.target.checked)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this),\n              label: /*#__PURE__*/_jsxDEV(Typography, {\n                color: errors.acceptTerms ? 'error' : 'inherit',\n                children: \"I have read and agree to the Terms *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"inherit\",\n              color: \"textSecondary\",\n              children: errors.acceptTerms ? '(' + errors.acceptTerms.message + ')' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 3,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleSubmit(onSubmit),\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"ep0U873iQWSzFHUv2GTeqANlehw=\", false, function () {\n  return [useForm];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Laptop/PycharmProjects/useful/node-react/react-node-express-mysql/react-auth-app/src/components/login.component.js"],"names":["React","Fragment","useForm","Controller","yupResolver","Yup","Paper","Box","Grid","TextField","Typography","FormControlLabel","Checkbox","Button","AuthService","Login","validationSchema","object","shape","fullname","string","required","username","min","max","email","password","confirmPassword","oneOf","ref","acceptTerms","bool","register","control","handleSubmit","formState","errors","resolver","onSubmit","data","console","log","JSON","stringify","login","then","window","location","reload","error","resMessage","response","message","toString","field","onChange","e","target","checked"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from 'yup';\r\n\r\nimport {\r\n  Paper,\r\n  Box,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Button\r\n} from '@material-ui/core';\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst Login = () => {\r\n  const validationSchema = Yup.object().shape({\r\n    fullname: Yup.string().required('Fullname is required'),\r\n    username: Yup.string()\r\n      .required('Username is required')\r\n      .min(6, 'Username must be at least 6 characters')\r\n      .max(20, 'Username must not exceed 20 characters'),\r\n    email: Yup.string()\r\n      .required('Email is required')\r\n      .email('Email is invalid'),\r\n    password: Yup.string()\r\n      .required('Password is required')\r\n      .min(6, 'Password must be at least 6 characters')\r\n      .max(40, 'Password must not exceed 40 characters'),\r\n    confirmPassword: Yup.string()\r\n      .required('Confirm Password is required')\r\n      .oneOf([Yup.ref('password'), null], 'Confirm Password does not match'),\r\n    acceptTerms: Yup.bool().oneOf([true], 'Accept Terms is required')\r\n  });\r\n\r\n  const {\r\n    register,\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({\r\n    resolver: yupResolver(validationSchema)\r\n  });\r\n\r\n  const onSubmit = data => {\r\n    console.log(JSON.stringify(data, null, 2));\r\n\r\n    AuthService.login(data.fullname, data.password).then(\r\n      () => {\r\n        window.location.reload();\r\n      },\r\n      error => {\r\n        const resMessage =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n      }\r\n    );\r\n\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Paper>\r\n        <Box mt={5} px={3} py={2}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12} sm={12}>\r\n              <TextField\r\n                required\r\n                id=\"fullname\"\r\n                name=\"fullname\"\r\n                label=\"Full Name\"\r\n                fullWidth\r\n                margin=\"dense\"\r\n                {...register('fullname')}\r\n                error={errors.fullname ? true : false}\r\n              />\r\n              <Typography variant=\"inherit\" color=\"textSecondary\">\r\n                {errors.fullname?.message}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                required\r\n                id=\"username\"\r\n                name=\"username\"\r\n                label=\"Username\"\r\n                fullWidth\r\n                margin=\"dense\"\r\n                {...register('username')}\r\n                error={errors.username ? true : false}\r\n              />\r\n              <Typography variant=\"inherit\" color=\"textSecondary\">\r\n                {errors.username?.message}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                required\r\n                id=\"email\"\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                fullWidth\r\n                margin=\"dense\"\r\n                {...register('email')}\r\n                error={errors.email ? true : false}\r\n              />\r\n              <Typography variant=\"inherit\" color=\"textSecondary\">\r\n                {errors.email?.message}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                required\r\n                id=\"password\"\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                fullWidth\r\n                margin=\"dense\"\r\n                {...register('password')}\r\n                error={errors.password ? true : false}\r\n              />\r\n              <Typography variant=\"inherit\" color=\"textSecondary\">\r\n                {errors.password?.message}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                required\r\n                id=\"confirmPassword\"\r\n                name=\"confirmPassword\"\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                fullWidth\r\n                margin=\"dense\"\r\n                {...register('confirmPassword')}\r\n                error={errors.confirmPassword ? true : false}\r\n              />\r\n              <Typography variant=\"inherit\" color=\"textSecondary\">\r\n                {errors.confirmPassword?.message}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={\r\n                  <Controller\r\n                    control={control}\r\n                    name=\"acceptTerms\"\r\n                    defaultValue=\"false\"\r\n                    inputRef={register()}\r\n                    render={({ field: { onChange } }) => (\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        onChange={e => onChange(e.target.checked)}\r\n                      />\r\n                    )}\r\n                  />\r\n                }\r\n                label={\r\n                  <Typography color={errors.acceptTerms ? 'error' : 'inherit'}>\r\n                    I have read and agree to the Terms *\r\n                  </Typography>\r\n                }\r\n              />\r\n              <br />\r\n              <Typography variant=\"inherit\" color=\"textSecondary\">\r\n                {errors.acceptTerms\r\n                  ? '(' + errors.acceptTerms.message + ')'\r\n                  : ''}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Box mt={3}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleSubmit(onSubmit)}\r\n            >\r\n              Register\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Paper>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}