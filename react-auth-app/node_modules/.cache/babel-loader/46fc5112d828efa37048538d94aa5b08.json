{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Laptop\\\\PycharmProjects\\\\useful\\\\node-react\\\\react-node-express-mysql\\\\react-auth-app\\\\src\\\\components\\\\login.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { styles } from \"../css-common\";\nimport { Paper, Box, Grid, TextField, Typography, FormControlLabel, Checkbox, Button, Container, withStyles } from '@material-ui/core';\nimport AuthService from \"../services/auth.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  var _errors$username, _errors$password;\n\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required('Fullname is required'),\n    password: Yup.string().required('Password is required').min(6, 'Password must be at least 6 characters').max(40, 'Password must not exceed 40 characters')\n  });\n  const {\n    register,\n    control,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n\n  const onSubmit = data => {\n    console.log(JSON.stringify(data, null, 2));\n    AuthService.login(data.username, data.password).then(() => {\n      window.location.reload();\n    }, error => {\n      const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.middleContainer,\n    children: /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          mt: 5,\n          px: 3,\n          py: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 1,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 12,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                inputProps: {\n                  style: {\n                    padding: 10\n                  }\n                },\n                required: true,\n                id: \"username\",\n                name: \"username\",\n                label: \"Username\",\n                fullWidth: true,\n                margin: \"dense\",\n                ...register('username'),\n                error: errors.username ? true : false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"inherit\",\n                color: \"textSecondary\",\n                children: (_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 12,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                inputProps: {\n                  style: {\n                    padding: 10\n                  }\n                },\n                required: true,\n                id: \"password\",\n                name: \"password\",\n                label: \"Password\",\n                type: \"password\",\n                fullWidth: true,\n                margin: \"dense\",\n                ...register('password'),\n                error: errors.password ? true : false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"inherit\",\n                color: \"textSecondary\",\n                children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            mt: 3,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: handleSubmit(onSubmit),\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"ep0U873iQWSzFHUv2GTeqANlehw=\", false, function () {\n  return [useForm];\n});\n\n_c = Login;\nexport default withStyles(styles)(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Laptop/PycharmProjects/useful/node-react/react-node-express-mysql/react-auth-app/src/components/login.component.js"],"names":["React","Fragment","useForm","Controller","yupResolver","Yup","styles","Paper","Box","Grid","TextField","Typography","FormControlLabel","Checkbox","Button","Container","withStyles","AuthService","Login","validationSchema","object","shape","username","string","required","password","min","max","register","control","handleSubmit","formState","errors","resolver","onSubmit","data","console","log","JSON","stringify","login","then","window","location","reload","error","resMessage","response","message","toString","middleContainer","style","padding"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from 'yup';\r\nimport { styles } from \"../css-common\"\r\n\r\nimport {\r\n  Paper,\r\n  Box,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Button, Container, withStyles\r\n} from '@material-ui/core';\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst Login = () => {\r\n  const validationSchema = Yup.object().shape({\r\n    username: Yup.string().required('Fullname is required'),\r\n    password: Yup.string()\r\n      .required('Password is required')\r\n      .min(6, 'Password must be at least 6 characters')\r\n      .max(40, 'Password must not exceed 40 characters')\r\n  });\r\n\r\n  const {\r\n    register,\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({\r\n    resolver: yupResolver(validationSchema)\r\n  });\r\n\r\n\r\n\r\n  const onSubmit = data => {\r\n    console.log(JSON.stringify(data, null, 2));\r\n\r\n    AuthService.login(data.username, data.password).then(\r\n      () => {\r\n        window.location.reload();\r\n      },\r\n      error => {\r\n        const resMessage =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n      }\r\n    );\r\n\r\n  };\r\n\r\n  return (\r\n    <div className={styles.middleContainer}>\r\n    <Fragment>\r\n      <Paper>\r\n        <Box mt={5} px={3} py={2}>\r\n          <Grid container spacing={1}>\r\n\r\n            <Grid item xs={12} sm={12}>\r\n              <TextField\r\n                inputProps={{\r\n                  style: {\r\n                    padding: 10\r\n                  }\r\n                }}\r\n                required\r\n                id=\"username\"\r\n                name=\"username\"\r\n                label=\"Username\"\r\n                fullWidth\r\n                margin=\"dense\"\r\n                {...register('username')}\r\n                error={errors.username ? true : false}\r\n              />\r\n              <Typography variant=\"inherit\" color=\"textSecondary\">\r\n                {errors.username?.message}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={12}>\r\n              <TextField\r\n                inputProps={{\r\n                  style: {\r\n                    padding: 10\r\n                  }\r\n                }}\r\n                required\r\n                id=\"password\"\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                fullWidth\r\n                margin=\"dense\"\r\n                {...register('password')}\r\n                error={errors.password ? true : false}\r\n              />\r\n              <Typography variant=\"inherit\" color=\"textSecondary\">\r\n                {errors.password?.message}\r\n              </Typography>\r\n            </Grid>\r\n\r\n\r\n          </Grid>\r\n\r\n          <Box mt={3}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleSubmit(onSubmit)}\r\n            >\r\n              Login\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Paper>\r\n    </Fragment>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(Login);"]},"metadata":{},"sourceType":"module"}