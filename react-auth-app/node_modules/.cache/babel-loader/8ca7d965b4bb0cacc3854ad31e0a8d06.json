{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Laptop\\\\PycharmProjects\\\\useful\\\\node-react\\\\react-node-express-mysql\\\\react-auth-app\\\\src\\\\components\\\\login.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { Paper, Box, Grid, TextField, Typography, Button } from '@material-ui/core';\nimport AuthService from \"../services/auth.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  var _errors$username, _errors$password;\n\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required('Fullname is required'),\n    password: Yup.string().required('Password is required').min(6, 'Password must be at least 6 characters').max(40, 'Password must not exceed 40 characters')\n  });\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n\n  const onSubmit = data => {\n    // Prevent page refresh\n    function handleSubmit(e) {\n      e.preventDefault();\n    }\n\n    console.log(JSON.stringify(data, null, 2)); //\n\n    AuthService.login(data.username, data.password).then(() => {\n      window.location.reload();\n    }, error => {\n      const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        mt: 5,\n        px: 3,\n        py: 5,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 1,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 12,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              inputProps: {\n                style: {\n                  padding: 10\n                }\n              },\n              required: true,\n              id: \"username\",\n              name: \"username\",\n              label: \"Username\",\n              fullWidth: true,\n              margin: \"dense\",\n              ...register('username'),\n              error: errors.username ? true : false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"inherit\",\n              color: \"textSecondary\",\n              children: (_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 12,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              inputProps: {\n                style: {\n                  padding: 10\n                }\n              },\n              required: true,\n              id: \"password\",\n              name: \"password\",\n              label: \"Password\",\n              type: \"password\",\n              fullWidth: true,\n              margin: \"dense\",\n              ...register('password'),\n              error: errors.password ? true : false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"inherit\",\n              color: \"textSecondary\",\n              children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 3,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleSubmit(onSubmit),\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"tSWsznurce2N9FlDTuxAZBumwp4=\", false, function () {\n  return [useForm];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Laptop/PycharmProjects/useful/node-react/react-node-express-mysql/react-auth-app/src/components/login.component.js"],"names":["React","Fragment","useForm","yupResolver","Yup","Paper","Box","Grid","TextField","Typography","Button","AuthService","Login","validationSchema","object","shape","username","string","required","password","min","max","register","handleSubmit","formState","errors","resolver","onSubmit","data","e","preventDefault","console","log","JSON","stringify","login","then","window","location","reload","error","resMessage","response","message","toString","style","padding"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from 'yup';\r\n\r\nimport {\r\n  Paper,\r\n  Box,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  Button\r\n} from '@material-ui/core';\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst Login = () => {\r\n  const validationSchema = Yup.object().shape({\r\n    username: Yup.string().required('Fullname is required'),\r\n    password: Yup.string()\r\n      .required('Password is required')\r\n      .min(6, 'Password must be at least 6 characters')\r\n      .max(40, 'Password must not exceed 40 characters')\r\n  });\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({\r\n    resolver: yupResolver(validationSchema)\r\n  });\r\n\r\n  const onSubmit = data => {\r\n    // Prevent page refresh\r\n    function handleSubmit(e) {\r\n      e.preventDefault();\r\n    }\r\n\r\n    console.log(JSON.stringify(data, null, 2));\r\n\r\n    //\r\n    AuthService.login(data.username, data.password).then(\r\n      () => {\r\n        window.location.reload();\r\n      },\r\n      error => {\r\n        const resMessage =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Paper>\r\n        <Box mt={5} px={3} py={5}>\r\n          <Grid container spacing={1}>\r\n\r\n            <Grid item xs={12} sm={12}>\r\n              <TextField\r\n                inputProps={{\r\n                  style: {\r\n                    padding: 10\r\n                  }\r\n                }}\r\n                required\r\n                id=\"username\"\r\n                name=\"username\"\r\n                label=\"Username\"\r\n                fullWidth\r\n                margin=\"dense\"\r\n                {...register('username')}\r\n                error={errors.username ? true : false}\r\n              />\r\n              <Typography variant=\"inherit\" color=\"textSecondary\">\r\n                {errors.username?.message}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={12}>\r\n              <TextField\r\n                inputProps={{\r\n                  style: {\r\n                    padding: 10\r\n                  }\r\n                }}\r\n                required\r\n                id=\"password\"\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                fullWidth\r\n                margin=\"dense\"\r\n                {...register('password')}\r\n                error={errors.password ? true : false}\r\n              />\r\n              <Typography variant=\"inherit\" color=\"textSecondary\">\r\n                {errors.password?.message}\r\n              </Typography>\r\n            </Grid>\r\n\r\n\r\n          </Grid>\r\n\r\n          <Box mt={3}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleSubmit(onSubmit)}\r\n            >\r\n              Login\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Paper>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}